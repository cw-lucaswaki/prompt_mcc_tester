2025-04-02 12:23:25,741 - root - INFO - Logging configured for MCC Classifier
2025-04-02 12:23:25,741 - root - INFO - Starting MCC classification evaluation
2025-04-02 12:23:25,742 - mcc_classifier.agent_factory - INFO - Creating all agents
2025-04-02 12:23:26,227 - mcc_classifier.agent.Rafa - INFO - OpenAI client initialized successfully.
2025-04-02 12:23:26,245 - mcc_classifier.agent.Matheus - INFO - OpenAI client initialized successfully.
2025-04-02 12:23:26,245 - mcc_classifier.evaluator - INFO - Initialized MCC evaluator with 3 agents
2025-04-02 12:23:26,245 - mcc_classifier.evaluator - INFO - Starting evaluation with input file: data/sample_merchants.csv
2025-04-02 12:23:26,245 - mcc_classifier.data_handler - INFO - Reading data from data/sample_merchants.csv
2025-04-02 12:23:26,274 - mcc_classifier.data_handler - INFO - Successfully read 10 rows from data/sample_merchants.csv
2025-04-02 12:23:26,274 - mcc_classifier.evaluator - INFO - Read 10 merchants from input file
2025-04-02 12:23:26,274 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Walmart Supercentre
2025-04-02 12:23:26,274 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Walmart Supercentre
2025-04-02 12:23:26,283 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Walmart Supercentre" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "Walmart Inc.".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:26,541 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:26,542 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-02 12:23:26,599 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10866cec0>
2025-04-02 12:23:26,599 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1085bd6d0> server_hostname='api.openai.com' timeout=5.0
2025-04-02 12:23:26,625 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10862e990>
2025-04-02 12:23:26,626 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:26,626 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:26,627 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:26,627 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:26,627 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:26,989 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_902c1a64cc5134ad22e741bea72188a2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jDoeLmmQYZNIVilHSSHj_qC4Xhjhjb64m9zlRhC5PyI-1743607407-1.0.1.1-oog_RJ6k8D75lgRzzA2c85Lh.Qu364aHN6DkYXrXrfO61OVjMiHHU205G7fH6eH4.nuuViKduFBHXO0FXCOC0GLmNsfWfxzHOjxAXWgm7vs; path=/; expires=Wed, 02-Apr-25 15:53:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=OrfzgI0I9FogaRqemLGA6N3GX.HnA8x2TUOdL.HQcXg-1743607407137-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153d46a387e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:26,991 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:26,992 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:26,992 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:26,992 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:26,992 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:26,993 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers([('date', 'Wed, 02 Apr 2025 15:23:27 GMT'), ('content-type', 'application/json; charset=utf-8'), ('content-length', '330'), ('connection', 'keep-alive'), ('vary', 'Origin'), ('x-request-id', 'req_902c1a64cc5134ad22e741bea72188a2'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=jDoeLmmQYZNIVilHSSHj_qC4Xhjhjb64m9zlRhC5PyI-1743607407-1.0.1.1-oog_RJ6k8D75lgRzzA2c85Lh.Qu364aHN6DkYXrXrfO61OVjMiHHU205G7fH6eH4.nuuViKduFBHXO0FXCOC0GLmNsfWfxzHOjxAXWgm7vs; path=/; expires=Wed, 02-Apr-25 15:53:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=OrfzgI0I9FogaRqemLGA6N3GX.HnA8x2TUOdL.HQcXg-1743607407137-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92a153d46a387e0f-GRU'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-04-02 12:23:26,993 - openai._base_client - DEBUG - request_id: req_902c1a64cc5134ad22e741bea72188a2
2025-04-02 12:23:26,993 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:26,999 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:27,000 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:27,001 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:27,001 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Walmart Supercentre
2025-04-02 12:23:27,001 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Walmart Supercentre
2025-04-02 12:23:27,001 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Walmart Supercentre
2025-04-02 12:23:27,014 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x10865f060>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: Walmart Inc.\n                        Merchant Name: Walmart Supercentre\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:27,016 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:27,016 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-02 12:23:27,040 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10862fed0>
2025-04-02 12:23:27,040 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1085bd7f0> server_hostname='api.openai.com' timeout=5.0
2025-04-02 12:23:27,124 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1085c2650>
2025-04-02 12:23:27,130 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:27,143 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:27,143 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:27,144 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:27,144 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:27,389 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_befba2e4122480f77a0263424ee65b74'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=hIttNSDFWy9JH_QPcaBnK0h931X3IIRZ_FxsgJFrVb4-1743607407-1.0.1.1-zOLeVWMgskLnK73p4Du..cjwWFpzZ44Zm5elXLmiFUAhn905lVQTLPAVbkL4HJ2jshV2JxOYGAVgHMFAkrm_f1FWmMeU1gCgo3qaHGYUA28; path=/; expires=Wed, 02-Apr-25 15:53:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=fsTzUHWeZfLmhSxU1A7xx9o1fCVsmLwbQDOc2WOMA1M-1743607407524-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153d7a9cf7e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:27,394 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:27,395 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:27,395 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:27,395 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:27,395 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:27,397 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers([('date', 'Wed, 02 Apr 2025 15:23:27 GMT'), ('content-type', 'application/json; charset=utf-8'), ('content-length', '330'), ('connection', 'keep-alive'), ('vary', 'Origin'), ('x-request-id', 'req_befba2e4122480f77a0263424ee65b74'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=hIttNSDFWy9JH_QPcaBnK0h931X3IIRZ_FxsgJFrVb4-1743607407-1.0.1.1-zOLeVWMgskLnK73p4Du..cjwWFpzZ44Zm5elXLmiFUAhn905lVQTLPAVbkL4HJ2jshV2JxOYGAVgHMFAkrm_f1FWmMeU1gCgo3qaHGYUA28; path=/; expires=Wed, 02-Apr-25 15:53:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=fsTzUHWeZfLmhSxU1A7xx9o1fCVsmLwbQDOc2WOMA1M-1743607407524-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92a153d7a9cf7e05-GRU'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-04-02 12:23:27,401 - openai._base_client - DEBUG - request_id: req_befba2e4122480f77a0263424ee65b74
2025-04-02 12:23:27,401 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:27,408 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:27,424 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:27,442 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:27,442 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Walmart Supercentre
2025-04-02 12:23:27,443 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Walmart Supercentre
2025-04-02 12:23:27,443 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Amazon
2025-04-02 12:23:27,443 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Amazon
2025-04-02 12:23:27,449 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Amazon" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "Amazon.com Inc.".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:27,450 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:27,451 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:27,453 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:27,453 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:27,454 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:27,454 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:27,661 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_398ec8299df11e929e1d299748129080'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153d99d5a7e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:27,661 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:27,662 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:27,662 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:27,662 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:27,662 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:27,662 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:27 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_398ec8299df11e929e1d299748129080', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153d99d5a7e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:27,662 - openai._base_client - DEBUG - request_id: req_398ec8299df11e929e1d299748129080
2025-04-02 12:23:27,662 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:27,664 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:27,664 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:27,664 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:27,664 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Amazon
2025-04-02 12:23:27,664 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Amazon
2025-04-02 12:23:27,666 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Amazon
2025-04-02 12:23:27,682 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108681760>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: Amazon.com Inc.\n                        Merchant Name: Amazon\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:27,705 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:27,706 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:27,706 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:27,707 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:27,707 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:27,707 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:27,930 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_fb10f9e2178eaa21e72409b8ed11644b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153db2c5d7e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:27,931 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:27,931 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:27,931 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:27,931 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:27,931 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:27,935 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:28 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_fb10f9e2178eaa21e72409b8ed11644b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153db2c5d7e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:27,935 - openai._base_client - DEBUG - request_id: req_fb10f9e2178eaa21e72409b8ed11644b
2025-04-02 12:23:27,936 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:27,940 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:27,940 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:27,941 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:27,941 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Amazon
2025-04-02 12:23:27,941 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Amazon
2025-04-02 12:23:27,941 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Starbucks Coffee
2025-04-02 12:23:27,941 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Starbucks Coffee
2025-04-02 12:23:27,946 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Starbucks Coffee" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "Starbucks Corporation".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:27,947 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:27,948 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:27,948 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:27,948 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:27,949 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:27,949 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:31,224 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:31 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_f7745caaeb963ac4930d05f4c9681fe7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153dcaf5b7e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:31,225 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:31,225 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:31,225 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:31,225 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:31,231 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:31,232 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:31 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_f7745caaeb963ac4930d05f4c9681fe7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153dcaf5b7e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:31,232 - openai._base_client - DEBUG - request_id: req_f7745caaeb963ac4930d05f4c9681fe7
2025-04-02 12:23:31,233 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:31,235 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:31,235 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:31,236 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:31,240 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Starbucks Coffee
2025-04-02 12:23:31,240 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Starbucks Coffee
2025-04-02 12:23:31,241 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Starbucks Coffee
2025-04-02 12:23:31,250 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108682d40>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: Starbucks Corporation\n                        Merchant Name: Starbucks Coffee\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:31,329 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:31,329 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:31,329 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:31,330 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:31,330 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:31,330 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:31,557 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:31 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_9e6d7802ce8c69f441d8a602788cf8dc'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153f1cd777e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:31,557 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:31,559 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:31,559 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:31,559 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:31,561 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:31,563 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:31 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_9e6d7802ce8c69f441d8a602788cf8dc', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153f1cd777e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:31,563 - openai._base_client - DEBUG - request_id: req_9e6d7802ce8c69f441d8a602788cf8dc
2025-04-02 12:23:31,563 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:31,564 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:31,564 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:31,564 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:31,567 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Starbucks Coffee
2025-04-02 12:23:31,567 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Starbucks Coffee
2025-04-02 12:23:31,568 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Best Buy
2025-04-02 12:23:31,568 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Best Buy
2025-04-02 12:23:31,579 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Best Buy" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "Best Buy Co. Inc.".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:31,582 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:31,583 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:31,584 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:31,584 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:31,584 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:31,584 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:31,801 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:31 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_cbb1d2422f664f0ad91d49e3caff6c5e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153f36f607e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:31,802 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:31,803 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:31,803 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:31,805 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:31,805 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:31,806 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:31 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_cbb1d2422f664f0ad91d49e3caff6c5e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153f36f607e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:31,806 - openai._base_client - DEBUG - request_id: req_cbb1d2422f664f0ad91d49e3caff6c5e
2025-04-02 12:23:31,806 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:31,810 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:31,811 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:31,811 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:31,811 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Best Buy
2025-04-02 12:23:31,812 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Best Buy
2025-04-02 12:23:31,812 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Best Buy
2025-04-02 12:23:31,827 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108681800>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: Best Buy Co. Inc.\n                        Merchant Name: Best Buy\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:31,837 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:31,837 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:31,837 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:31,838 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:31,838 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:31,838 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:32,115 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_39237b885d1ccebc581a79b02c170c97'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153f4ffb97e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:32,119 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:32,128 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:32,128 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:32,129 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:32,129 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:32,130 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:32 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_39237b885d1ccebc581a79b02c170c97', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153f4ffb97e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:32,130 - openai._base_client - DEBUG - request_id: req_39237b885d1ccebc581a79b02c170c97
2025-04-02 12:23:32,131 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:32,131 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:32,132 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:32,133 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:32,133 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Best Buy
2025-04-02 12:23:32,134 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Best Buy
2025-04-02 12:23:32,159 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Chevron Gas Station
2025-04-02 12:23:32,159 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Chevron Gas Station
2025-04-02 12:23:32,225 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Chevron Gas Station" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "Chevron Corporation".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:32,231 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:32,239 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:32,310 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:32,311 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:32,311 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:32,311 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:32,512 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_1711fd1be75f6569df50dbe43c7ca270'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153f7fa697e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:32,514 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:32,514 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:32,515 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:32,515 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:32,515 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:32,515 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:32 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_1711fd1be75f6569df50dbe43c7ca270', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153f7fa697e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:32,516 - openai._base_client - DEBUG - request_id: req_1711fd1be75f6569df50dbe43c7ca270
2025-04-02 12:23:32,517 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:32,546 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:32,547 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:32,547 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:32,547 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Chevron Gas Station
2025-04-02 12:23:32,547 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Chevron Gas Station
2025-04-02 12:23:32,547 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Chevron Gas Station
2025-04-02 12:23:32,569 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108681800>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: Chevron Corporation\n                        Merchant Name: Chevron Gas Station\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:32,572 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:32,572 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:32,572 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:32,572 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:32,573 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:32,573 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:32,881 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_875b526f436105f08a0570c7bf18107d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153f99aea7e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:32,882 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:32,882 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:32,882 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:32,882 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:32,882 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:32,882 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:33 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_875b526f436105f08a0570c7bf18107d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153f99aea7e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:32,883 - openai._base_client - DEBUG - request_id: req_875b526f436105f08a0570c7bf18107d
2025-04-02 12:23:32,883 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:32,884 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:32,884 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:32,884 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:32,889 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Chevron Gas Station
2025-04-02 12:23:32,889 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Chevron Gas Station
2025-04-02 12:23:32,889 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: CVS Pharmacy
2025-04-02 12:23:32,889 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: CVS Pharmacy
2025-04-02 12:23:32,896 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "CVS Pharmacy" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "CVS Health".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:32,900 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:32,901 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:32,902 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:32,902 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:32,902 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:32,902 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:33,109 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_364f201d8472d82adc032613764a708c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153fbad007e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:33,114 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:33,114 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:33,114 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:33,117 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:33,117 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:33,119 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:33 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_364f201d8472d82adc032613764a708c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153fbad007e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:33,120 - openai._base_client - DEBUG - request_id: req_364f201d8472d82adc032613764a708c
2025-04-02 12:23:33,120 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:33,121 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:33,121 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:33,122 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:33,122 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: CVS Pharmacy
2025-04-02 12:23:33,122 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: CVS Pharmacy
2025-04-02 12:23:33,122 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: CVS Pharmacy
2025-04-02 12:23:33,130 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108682ca0>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: CVS Health\n                        Merchant Name: CVS Pharmacy\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:33,132 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:33,132 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:33,133 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:33,133 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:33,133 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:33,133 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:33,345 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_6b47f6ddc8ede3cda5275023525adb19'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153fd1d877e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:33,346 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:33,346 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:33,346 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:33,347 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:33,347 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:33,347 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:33 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_6b47f6ddc8ede3cda5275023525adb19', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153fd1d877e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:33,347 - openai._base_client - DEBUG - request_id: req_6b47f6ddc8ede3cda5275023525adb19
2025-04-02 12:23:33,347 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:33,348 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:33,348 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:33,348 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:33,348 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: CVS Pharmacy
2025-04-02 12:23:33,349 - mcc_classifier.agent.Waki - INFO - Classifying merchant: CVS Pharmacy
2025-04-02 12:23:33,349 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Home Depot
2025-04-02 12:23:33,349 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Home Depot
2025-04-02 12:23:33,354 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Home Depot" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "The Home Depot Inc.".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:33,355 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:33,361 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:33,369 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:33,370 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:33,370 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:33,370 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:34,116 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_208e912c72104fb8af622258e0fd4997'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a153fe8ef47e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:34,116 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:34,116 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:34,116 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:34,117 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:34,118 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:34,121 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:34 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_208e912c72104fb8af622258e0fd4997', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a153fe8ef47e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:34,122 - openai._base_client - DEBUG - request_id: req_208e912c72104fb8af622258e0fd4997
2025-04-02 12:23:34,122 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:34,126 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:34,126 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:34,126 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:34,127 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Home Depot
2025-04-02 12:23:34,127 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Home Depot
2025-04-02 12:23:34,128 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Home Depot
2025-04-02 12:23:34,134 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108683100>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: The Home Depot Inc.\n                        Merchant Name: Home Depot\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:34,136 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:34,136 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:34,137 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:34,137 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:34,137 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:34,137 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:34,463 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_a812ee40d40961f1da7ebda6851c52a9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a154035ab07e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:34,463 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:34,464 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:34,464 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:34,464 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:34,464 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:34,464 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:34 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_a812ee40d40961f1da7ebda6851c52a9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a154035ab07e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:34,464 - openai._base_client - DEBUG - request_id: req_a812ee40d40961f1da7ebda6851c52a9
2025-04-02 12:23:34,470 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:34,470 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:34,471 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:34,471 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:34,471 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Home Depot
2025-04-02 12:23:34,471 - mcc_classifier.agent.Matheus - INFO - Performing risk tier classification for: Home Depot
2025-04-02 12:23:34,477 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108683100>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification with a focus on risk assessment.\n                        Your task is to determine if a merchant should be classified in one of the risk-categorized MCCs.\n\n                        The merchant has already been through an initial screening, and needs additional review.\n\n                        Analyze the owner\'s name, merchant name, current MCC code, and MCC description, then determine:\n                        1. The most appropriate MCC from the risk-categorized list\n                        2. The risk level of that MCC (prohibited, pre-approval, pre-review, restricted, approved)\n                        3. Provide clear reasoning for your decision\n                        4. Assign a confidence score (0-1) to your suggestion\n                        5. Determine if a full search of all MCCs is still needed\n                        6. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category could possibly apply.\n\n                        RISK PRIORITIZATION:\n                        - When choosing between multiple possible MCCs, ALWAYS prioritize by risk level:\n                          1. First try to match to "prohibited" MCCs\n                          2. Then "pre-approval" MCCs\n                          3. Then "pre-review" MCCs\n                          4. Then "restricted" MCCs\n                          5. Only use "approved" MCCs if nothing else fits\n\n                        - For adult-oriented businesses, massage parlors (if available) are often appropriate\n                        - For gambling-related businesses, assign to gambling-related MCCs even if confidence is moderate\n\n                        Here is the list of MCCs with risk classifications:\n\n                        mcc,description,classification\n\n\n                        IMPORTANT: Always prioritize higher-risk classifications when in doubt.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant for potential risk classification:\n\n                        Owner Name: The Home Depot Inc.\n                        Merchant Name: Home Depot\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        Determine the most appropriate risk-categorized MCC, prioritizing higher-risk classifications.\n                        If you find a reasonable match in a higher-risk category, prefer that over lower-risk categories.\n\n                        Also determine if the current MCC classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'risk_level': {'description': 'The risk level of the suggested MCC (prohibited, pre-approval, pre-review, restricted, approved)', 'title': 'Risk Level', 'type': 'string'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original classification appears suspicious or intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'risk_level', 'requires_full_search', 'suspicious_classification'], 'title': 'RiskTierResult', 'type': 'object', 'additionalProperties': False}, 'name': 'RiskTierResult', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:34,503 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:34,503 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:34,504 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:34,504 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:34,504 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:34,504 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:34,781 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_8abf0763236c0a8b8cbde73e2cabdb01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a15405cc887e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:34,781 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:34,781 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:34,781 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:34,781 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:34,781 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:34,783 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:34 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_8abf0763236c0a8b8cbde73e2cabdb01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a15405cc887e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:34,785 - openai._base_client - DEBUG - request_id: req_8abf0763236c0a8b8cbde73e2cabdb01
2025-04-02 12:23:34,786 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:34,788 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:34,789 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:34,789 - mcc_classifier.agent.Matheus - ERROR - Error in risk tier classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:34,791 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Home Depot
2025-04-02 12:23:34,791 - mcc_classifier.agent.Matheus - INFO - Performing tier3 classification for: Home Depot
2025-04-02 12:23:34,802 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108683100>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to find the most appropriate\n                        MCC classification for a merchant from the complete list of MCC codes.\n\n                        The merchant has already been evaluated against a limited list and risk-categorized list,\n                        but requires a full analysis against all MCCs.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. The most appropriate MCC from the complete list\n                        2. Provide clear reasoning for your decision\n                        3. Assign a confidence score (0-1) to your suggestion\n                        4. Determine if the original classification appears suspicious or intentionally misleading\n                           (you\'ve been given a preliminary assessment: False)\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category could possibly apply.\n                        Look for the most specific category that matches the business type.\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely intended meaning\n                        - Make classifications based on the most likely business type given the complete name\n                        - For ambiguous names, acknowledge this in your analysis\n\n                        Here is the complete list of MCC codes:\n\n                        mcc,description,classification\n0780,Landscaping & Lawn Care,approved\n1520,General Contractors,approved\n1711,HVAC & Plumbing,approved\n1731,Electrical,approved\n1740,Masonry & Tile,approved\n1750,Carpentry,approved\n1761,Roofing & Siding,approved\n1771,Concrete,approved\n1799,Special Trade,approved\n4789,Transportation,approved\n5211,Building Materials,approved\n5251,Hardware,approved\n5311,Department Stores,approved\n5399,Other Retail,approved\n5411,Grocery Stores, Supermarkets,approved\n5499,Food & Convenience,approved\n5533,Auto Parts,approved\n5541,Gas & Fuel,approved\n5651,Apparel,approved\n5661,Footwear,approved\n5699,Clothing & Accessories,approved\n5812,Restaurants,approved\n5814,Fast Food,approved\n5940,Bike Shops,approved\n5941,Sporting Goods,approved\n5942,Bookstores,approved\n5943,Office & Stationery,approved\n5945,Hobbies & Toys,approved\n5947,Gifts & Souvenirs,approved\n5970,Arts & Crafts,approved\n5977,Cosmetics,approved\n5992,Florists,approved\n5995,Pet Supplies,approved\n7011,Hotels & Lodging,approved\n7210,Laundry & Cleaning,approved\n7211,Laundry Servicesâ€“Family and Commercial,approved\n7216,Dry Cleaners,approved\n7221,Photography,approved\n7230,Salons & Barbers,approved\n7251,Shoe Repair & Shine,approved\n7298,Health and Beauty Spas,approved\n7299,Other Services,approved\n7399,Other B2B Services,approved\n7542,Car Wash,approved\n7549,Towing,approved\n7699,Repair Shops & Services,approved\n7997,Country Clubs & Private Golf Courses,approved\n8099,Medical & Health Services,approved\n8299,Educational Services,approved\n5964,Direct Marketing - Catalog Merchants,approved\n5732,Electronics Stores,approved\n5912,Drug Stores and Pharmacies,approved\n5200,Home Supply Warehouse Stores,approved\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please find the most appropriate MCC classification for this merchant from the complete list:\n\n                        Owner Name: The Home Depot Inc.\n                        Merchant Name: Home Depot\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        Consider the merchant name in its entirety when making your assessment.\n                        Provide a thorough analysis with your confidence level.\n\n                        Also determine if the current MCC classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary.\n                        If the merchant name clearly indicates a specific business type (like "PRESTIGE PRO REAL ESTATE"\n                        indicating a real estate business), find the most specific category for that business type.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'suspicious_classification'], 'title': 'MCCClassification', 'type': 'object', 'additionalProperties': False}, 'name': 'MCCClassification', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:34,807 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:34,812 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:34,813 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:34,813 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:34,813 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:34,813 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,160 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_2272e2e00d917d0bf2c37d77c66dab60'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a154079dfe7e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:35,161 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:35,161 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,161 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:35,161 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:35,165 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:35,166 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:35 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_2272e2e00d917d0bf2c37d77c66dab60', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a154079dfe7e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:35,167 - openai._base_client - DEBUG - request_id: req_2272e2e00d917d0bf2c37d77c66dab60
2025-04-02 12:23:35,167 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:35,169 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:35,169 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:35,169 - mcc_classifier.agent.Matheus - ERROR - Error in tier3 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:35,171 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Home Depot
2025-04-02 12:23:35,180 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Home Depot
2025-04-02 12:23:35,182 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: McDonald's
2025-04-02 12:23:35,182 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: McDonald's
2025-04-02 12:23:35,202 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "McDonald\'s" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "McDonald\'s Corporation".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:35,209 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:35,210 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,212 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:35,212 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,213 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:35,213 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,420 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_67c00ada8c519dd5afbd5f19a54c672c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a1540a1f287e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:35,421 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:35,421 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,422 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:35,423 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:35,423 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:35,424 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:35 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_67c00ada8c519dd5afbd5f19a54c672c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a1540a1f287e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:35,424 - openai._base_client - DEBUG - request_id: req_67c00ada8c519dd5afbd5f19a54c672c
2025-04-02 12:23:35,424 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:35,425 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:35,425 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:35,426 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:35,426 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: McDonald's
2025-04-02 12:23:35,428 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: McDonald's
2025-04-02 12:23:35,428 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: McDonald's
2025-04-02 12:23:35,436 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108683100>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: McDonald\'s Corporation\n                        Merchant Name: McDonald\'s\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:35,438 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:35,439 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,439 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:35,440 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,440 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:35,440 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,661 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_38cb7bb076663ce4430e4ae6209d3db1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a1540b792a7e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:35,661 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:35,662 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,662 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:35,662 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:35,662 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:35,662 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:35 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_38cb7bb076663ce4430e4ae6209d3db1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a1540b792a7e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:35,662 - openai._base_client - DEBUG - request_id: req_38cb7bb076663ce4430e4ae6209d3db1
2025-04-02 12:23:35,662 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:35,663 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:35,663 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:35,663 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:35,663 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: McDonald's
2025-04-02 12:23:35,664 - mcc_classifier.agent.Waki - INFO - Classifying merchant: McDonald's
2025-04-02 12:23:35,664 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Apple Store
2025-04-02 12:23:35,664 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Apple Store
2025-04-02 12:23:35,674 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Apple Store" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "Apple Inc.".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:35,697 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:35,702 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,706 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:35,710 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,711 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:35,713 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,912 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_8dfdf0dce04dea9b3e0d48e1e9975c35'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a1540d29587e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:35,913 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:35,913 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,913 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:35,913 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:35,913 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:35,914 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:36 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_8dfdf0dce04dea9b3e0d48e1e9975c35', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a1540d29587e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:35,914 - openai._base_client - DEBUG - request_id: req_8dfdf0dce04dea9b3e0d48e1e9975c35
2025-04-02 12:23:35,914 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:35,915 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:35,915 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:35,915 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:35,915 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Apple Store
2025-04-02 12:23:35,915 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Apple Store
2025-04-02 12:23:35,915 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Apple Store
2025-04-02 12:23:35,927 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x108683240>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: Apple Inc.\n                        Merchant Name: Apple Store\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:35,930 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:35,931 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:35,931 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:35,931 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:35,931 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:35,931 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:36,227 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_4ea095b3d82e3a50a2092c105008854f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a1540e9bea7e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:36,228 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:36,228 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:36,229 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:36,229 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:36,229 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:36,229 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:36 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_4ea095b3d82e3a50a2092c105008854f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a1540e9bea7e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:36,229 - openai._base_client - DEBUG - request_id: req_4ea095b3d82e3a50a2092c105008854f
2025-04-02 12:23:36,229 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:36,230 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:36,230 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:36,230 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:36,230 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Apple Store
2025-04-02 12:23:36,230 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Apple Store
2025-04-02 12:23:36,230 - mcc_classifier.agent.Rafa - INFO - Classifying merchant: Target
2025-04-02 12:23:36,230 - mcc_classifier.agent.Rafa - INFO - Sending request to OpenAI for merchant: Target
2025-04-02 12:23:36,238 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an expert in merchant category codes (MCC). Provide your analysis and suggestions in the exact format requested.'}, {'role': 'user', 'content': '\n        A merchant named "Target" needs to be classified with an appropriate MCC code.\n        The legal representative\'s name is "Target Corporation".\n\n        Please assess the most appropriate MCC based on the following guidelines:\n        - If the merchant name is similar or identical to the legal representative\'s name without specific industry indication, suggest a general service MCC.\n        - If merchant name explicitly indicates a specific business category, suggest the most common MCC from the provided examples below.\n        - If unclear or ambiguous, suggest a general MCC that would be most common.\n\n        Here is a reference of commonly used MCC codes:\n\n        - 0780 : Landscaping & Lawn Care\n- 1520 : General Contractors\n- 1711 : HVAC & Plumbing\n- 1731 : Electrical\n- 1740 : Masonry & Tile\n- 1750 : Carpentry\n- 1761 : Roofing & Siding\n- 1771 : Concrete\n- 1799 : Special Trade\n- 4789 : Transportation\n- 5211 : Building Materials\n- 5251 : Hardware\n- 5311 : Department Stores\n- 5399 : Other Retail\n- 5411 : Grocery Stores, Supermarkets\n- 5499 : Food & Convenience\n- 5533 : Auto Parts\n- 5541 : Gas & Fuel\n- 5651 : Apparel\n- 5661 : Footwear\n- 5699 : Clothing & Accessories\n- 5812 : Restaurants\n- 5814 : Fast Food\n- 5940 : Bike Shops\n- 5941 : Sporting Goods\n- 5942 : Bookstores\n- 5943 : Office & Stationery\n- 5945 : Hobbies & Toys\n- 5947 : Gifts & Souvenirs\n- 5970 : Arts & Crafts\n- 5977 : Cosmetics\n- 5992 : Florists\n- 5995 : Pet Supplies\n- 7011 : Hotels & Lodging\n- 7210 : Laundry & Cleaning\n- 7211 : Laundry Servicesâ€“Family and Commercial\n- 7216 : Dry Cleaners\n- 7221 : Photography\n- 7230 : Salons & Barbers\n- 7251 : Shoe Repair & Shine\n- 7298 : Health and Beauty Spas\n- 7299 : Other Services\n- 7399 : Other B2B Services\n- 7542 : Car Wash\n- 7549 : Towing\n- 7699 : Repair Shops & Services\n- 7997 : Country Clubs & Private Golf Courses\n- 8099 : Medical & Health Services\n- 8299 : Educational Services\n- 5964 : Direct Marketing - Catalog Merchants\n- 5732 : Electronics Stores\n- 5912 : Drug Stores and Pharmacies\n- 5200 : Home Supply Warehouse Stores\n\n        **Always prioritize common MCCs for your suggestions.**\n        **Consider that these businesses are mostly solo entrepreneurs, so avoid suggesting MCCs related to big companies or large enterprises.**\n\n        **Respond strictly in the following format:**\n        1. Analysis: [Brief analysis, highlighting alignment or mismatch]\n        2. Suggested MCC: [Only MCC number]\n        3. Suggested Description: [MCC description]\n        '}], 'model': 'gpt-4-turbo'}}
2025-04-02 12:23:36,240 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:36,240 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:36,242 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:36,242 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:36,244 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:36,244 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:36,454 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_6892583f7058a011d32b7fca911bc51e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a154108c067e0f-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:36,455 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:36,455 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:36,455 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:36,455 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:36,460 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:36,467 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:36 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_6892583f7058a011d32b7fca911bc51e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a154108c067e0f-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:36,472 - openai._base_client - DEBUG - request_id: req_6892583f7058a011d32b7fca911bc51e
2025-04-02 12:23:36,472 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:36,476 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:36,476 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:36,476 - mcc_classifier.agent.Rafa - ERROR - Error classifying with OpenAI: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:36,476 - mcc_classifier.agent.Rafa - INFO - Using fallback classification for: Target
2025-04-02 12:23:36,478 - mcc_classifier.agent.Matheus - INFO - Classifying merchant: Target
2025-04-02 12:23:36,478 - mcc_classifier.agent.Matheus - INFO - Performing tier1 classification for: Target
2025-04-02 12:23:36,495 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'X-Stainless-Helper-Method': 'beta.chat.completions.parse'}, 'files': None, 'post_parser': <function Completions.parse.<locals>.parser at 0x1086819e0>, 'json_data': {'messages': [{'role': 'system', 'content': '\n                        You are an expert in merchant category classification. Your task is to evaluate if a merchant\'s\n                        auto-classification is accurate based on the provided information.\n\n                        Analyze the owner\'s name, merchant name (business/store name), current MCC code, and MCC description.\n                        Then determine:\n                        1. If the merchant name is non-descriptive (SPECIFICALLY: if it\'s just the owner\'s name or a minor variation)\n                        2. If the merchant name suggests a potentially high-risk business (adult content, gambling, etc.)\n                        3. If the current MCC classification is appropriate\n                        4. If not, suggest a more appropriate MCC from the provided limited list\n                        5. Provide clear reasoning for your decision\n                        6. Assign a confidence score (0-1) to your suggestion\n                        7. Determine if a full search of all MCCs is needed\n                        8. Determine if the original classification appears suspicious or intentionally misleading\n\n                        IMPORTANT - SUSPICIOUS CLASSIFICATION:\n                        Set suspicious_classification to TRUE if the original MCC has NO logical connection to the merchant name\n                        and appears to be intentionally misleading. Examples:\n                        * Merchant Name: "PIZZERIA NUEVA LEON", MCC: "Barber Shops" - This is suspicious\n                        * Merchant Name: "GOLDEN NAIL SPA", MCC: "Family Clothing Stores" - This is suspicious\n                        * Merchant Name: "AUTO PARTS CENTER", MCC: "Real Estate Agents" - This is suspicious\n\n                        Only mark as suspicious if there is a clear disconnect that cannot be explained by ambiguity or\n                        lack of available categories. A slight mismatch is not suspicious - it must be completely unrelated.\n\n                        IMPORTANT: The following MCCs are CATCH-ALL CATEGORIES and should ONLY be used as a LAST RESORT:\n                        7299, 7399, 5399, 1799, 7999, 8999\n\n                        Only suggest these catch-all categories if NO other category in the limited list could possibly apply.\n                        If you are considering a catch-all category, you should set requires_full_search to true so we can\n                        try to find a more specific category in the complete MCC list.\n\n                        IMPORTANT GUIDANCE ON HIGH-RISK BUSINESSES:\n                        - If a merchant name suggests adult services, gambling, weapons, drugs, or other potentially\n                          restricted activities, set may_be_high_risk to true\n                        - Examples that should be flagged as potentially high risk:\n                          * "Orgasmtron" (suggests adult services)\n                          * "Wholesalewhores" (suggests adult services)\n                          * "Lucky Slots" (suggests gambling)\n                          * Names containing explicit sexual terminology\n\n                        IMPORTANT GUIDANCE ON ANALYZING BUSINESS NAMES:\n                        - Consider the FULL name and its likely meaning\n                        - Be careful not to over-rely on partial word matches\n                        - For names like "AUTOMATICWINBOYZ LLC" - don\'t assume it\'s clothing just because it has "BOYZ"\n                          in it unless there are other clear indicators of clothing retail\n\n                        IMPORTANT CLARIFICATION ON NON-DESCRIPTIVE NAMES:\n                        - A merchant name is ONLY considered non-descriptive if it is essentially just the owner\'s name\n                          or a very slight variation of it (e.g., "John Smith" â†’ "John Smith LLC" or "J Smith Services")\n                        - Examples where the name would be considered non-descriptive:\n                          * Owner: "Robert Paulson", Merchant: "Robert Paulson LLC"\n                          * Owner: "Robert Paulson", Merchant: "Bob Paulson"\n                        - Examples where the name would NOT be considered non-descriptive:\n                          * Owner: "Linda Carter", Merchant: "Labomba Lay"\n                          * Owner: "John Smith", Merchant: "Sunrise Enterprises"\n\n                        Here is the limited list of approved MCC codes for classification:\n\n                        mcc,description\n0780,Landscaping & Lawn Care\n1520,General Contractors\n1711,HVAC & Plumbing\n1731,Electrical\n1740,Masonry & Tile\n1750,Carpentry\n1761,Roofing & Siding\n1771,Concrete\n1799,Special Trade\n4789,Transportation\n5211,Building Materials\n5251,Hardware\n5311,Department Stores\n5399,Other Retail\n5411,Grocery Stores, Supermarkets\n5499,Food & Convenience\n5533,Auto Parts\n5541,Gas & Fuel\n5651,Apparel\n5661,Footwear\n5699,Clothing & Accessories\n5812,Restaurants\n5814,Fast Food\n5940,Bike Shops\n5941,Sporting Goods\n5942,Bookstores\n5943,Office & Stationery\n5945,Hobbies & Toys\n5947,Gifts & Souvenirs\n5970,Arts & Crafts\n5977,Cosmetics\n5992,Florists\n5995,Pet Supplies\n7011,Hotels & Lodging\n7210,Laundry & Cleaning\n7211,Laundry Servicesâ€“Family and Commercial\n7216,Dry Cleaners\n7221,Photography\n7230,Salons & Barbers\n7251,Shoe Repair & Shine\n7298,Health and Beauty Spas\n7299,Other Services\n7399,Other B2B Services\n7542,Car Wash\n7549,Towing\n7699,Repair Shops & Services\n7997,Country Clubs & Private Golf Courses\n8099,Medical & Health Services\n8299,Educational Services\n5964,Direct Marketing - Catalog Merchants\n5732,Electronics Stores\n5912,Drug Stores and Pharmacies\n5200,Home Supply Warehouse Stores\n\n\n                        Base your analysis on the context of the complete business name, not just partial matches.\n                     '}, {'role': 'user', 'content': '\n                        Please analyze this merchant:\n\n                        Owner Name: Target Corporation\n                        Merchant Name: Target\n                        Current MCC: 5812\n                        MCC Description: Eating Places, Restaurants\n\n                        First determine if the merchant name is essentially just the owner\'s name.\n                        Then check if the name suggests a potentially high-risk business.\n                        Then determine if the current classification makes sense or suggest a more appropriate one.\n                        Also determine if the current classification appears suspicious (completely unrelated to the business).\n\n                        IMPORTANT: Avoid using general "catch-all" categories unless absolutely necessary. If you\'re\n                        considering a catch-all category, please indicate that a full search is needed instead.\n\n                        Consider the merchant name in its entirety when making your assessment.\n                     '}], 'model': 'o3-mini', 'response_format': {'type': 'json_schema', 'json_schema': {'schema': {'properties': {'suggested_mcc': {'description': 'The suggested MCC code for the merchant', 'title': 'Suggested Mcc', 'type': 'string'}, 'mcc_suggestion_description': {'description': 'Description of the suggested MCC', 'title': 'Mcc Suggestion Description', 'type': 'string'}, 'analysis': {'description': 'List of reasoning steps explaining the analysis', 'items': {'type': 'string'}, 'title': 'Analysis', 'type': 'array'}, 'confidence': {'description': 'Confidence score (0-1) for the suggestion', 'title': 'Confidence', 'type': 'number'}, 'requires_full_search': {'description': 'Whether a full MCC database search is recommended', 'title': 'Requires Full Search', 'type': 'boolean'}, 'is_non_descriptive': {'description': "Whether the merchant name is essentially just the owner's name", 'title': 'Is Non Descriptive', 'type': 'boolean'}, 'may_be_high_risk': {'description': 'Whether the merchant name suggests a potentially high-risk business', 'title': 'May Be High Risk', 'type': 'boolean'}, 'suspicious_classification': {'description': 'Whether the original MCC seems intentionally misleading', 'title': 'Suspicious Classification', 'type': 'boolean'}}, 'required': ['suggested_mcc', 'mcc_suggestion_description', 'analysis', 'confidence', 'requires_full_search', 'is_non_descriptive', 'may_be_high_risk', 'suspicious_classification'], 'title': 'Tier1Result', 'type': 'object', 'additionalProperties': False}, 'name': 'Tier1Result', 'strict': True}}, 'stream': False}}
2025-04-02 12:23:36,515 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-04-02 12:23:36,517 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-02 12:23:36,518 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-02 12:23:36,518 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-02 12:23:36,519 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-02 12:23:36,519 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-02 12:23:36,730 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Wed, 02 Apr 2025 15:23:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_47a545a8cae78d0455cf84626d2042c5'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92a154123e777e05-GRU'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-04-02 12:23:36,730 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-04-02 12:23:36,731 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-02 12:23:36,731 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-02 12:23:36,731 - httpcore.http11 - DEBUG - response_closed.started
2025-04-02 12:23:36,733 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-02 12:23:36,735 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Wed, 02 Apr 2025 15:23:36 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '330', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_47a545a8cae78d0455cf84626d2042c5', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92a154123e777e05-GRU', 'alt-svc': 'h3=":443"; ma=86400'})
2025-04-02 12:23:36,736 - openai._base_client - DEBUG - request_id: req_47a545a8cae78d0455cf84626d2042c5
2025-04-02 12:23:36,736 - openai._base_client - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/openai/_base_client.py", line 1002, in _request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/lucaswaki/Documents/Workplace/infinitepay/prompt_mcc_tester/.venv/lib/python3.13/site-packages/httpx/_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-04-02 12:23:36,738 - openai._base_client - DEBUG - Not retrying
2025-04-02 12:23:36,738 - openai._base_client - DEBUG - Re-raising status error
2025-04-02 12:23:36,739 - mcc_classifier.agent.Matheus - ERROR - Error in tier1 classification: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************xxxx. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-04-02 12:23:36,739 - mcc_classifier.agent.Matheus - INFO - Using fallback classification for: Target
2025-04-02 12:23:36,740 - mcc_classifier.agent.Waki - INFO - Classifying merchant: Target
2025-04-02 12:23:36,742 - mcc_classifier.data_handler - INFO - Writing 11 rows to output/sample_results_with_api.csv
2025-04-02 12:23:36,775 - mcc_classifier.data_handler - INFO - Successfully wrote data to output/sample_results_with_api.csv
2025-04-02 12:23:36,775 - mcc_classifier.evaluator - INFO - Evaluation complete. Results written to output/sample_results_with_api.csv
2025-04-02 12:23:36,775 - root - INFO - Evaluation completed successfully
2025-04-02 12:23:36,775 - root - INFO - Results written to: output/sample_results_with_api.csv
2025-04-02 12:23:36,775 - root - INFO - Rafa - Accuracy: 10.00% (1/10)
2025-04-02 12:23:36,775 - root - INFO - Matheus - Accuracy: 10.00% (1/10)
2025-04-02 12:23:36,775 - root - INFO - Waki - Accuracy: 20.00% (2/10)
2025-04-02 12:23:37,002 - httpcore.connection - DEBUG - close.started
2025-04-02 12:23:37,004 - httpcore.connection - DEBUG - close.complete
2025-04-02 12:23:37,004 - httpcore.connection - DEBUG - close.started
2025-04-02 12:23:37,005 - httpcore.connection - DEBUG - close.complete
